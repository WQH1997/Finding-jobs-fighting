######## 回文字符串 #########################
class Solution:
    def isPalindrome(self, s: str) -> bool:
        s= ''.join(char for char in s.casefold() if char.isalnum())
        return s==s[::-1]
        
############################################
class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        return 2*sum(list(set(nums)))-sum(nums)
        
############################################
Difference: 返回indice从1开始
class Solution:
    def twoSum(self, numbers, target):
        num_dic=dict()
        pos=0
        while pos<len(numbers):
            if target-numbers[pos] in num_dic:
                return [num_dic[target - numbers[pos]]+1,pos+1]
                break
            else:
                num_dic[numbers[pos]] = pos
                pos += 1
        
